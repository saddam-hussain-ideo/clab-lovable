
-- Create a new table for tracking all quiz attempts
create table if not exists public.user_quiz_attempts (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  attempt_date timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Create index for faster lookups
create index if not exists user_quiz_attempts_user_id_idx on public.user_quiz_attempts(user_id);

-- Function to check total quiz attempts
create or replace function public.check_total_quiz_attempts(user_id uuid)
returns integer
language plpgsql
security definer
as $$
declare
    total_attempts integer;
begin
    select count(*)
    into total_attempts
    from public.user_quiz_attempts
    where user_quiz_attempts.user_id = check_total_quiz_attempts.user_id;
    
    return coalesce(total_attempts, 0);
end;
$$;

-- Add RLS policies to protect the quiz attempts table
alter table public.user_quiz_attempts enable row level security;

-- Add policies for quiz attempts
create policy "Users can insert their own quiz attempts"
on public.user_quiz_attempts
for insert to authenticated
with check (auth.uid() = user_id);

create policy "Users can view their own quiz attempts"
on public.user_quiz_attempts
for select to authenticated
using (auth.uid() = user_id);
